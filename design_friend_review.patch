diff --git a/dice_platform/urls.py b/dice_platform/urls.py
index fbc75be..a258054 100644
--- a/dice_platform/urls.py
+++ b/dice_platform/urls.py
@@ -15,7 +15,7 @@ Including another URLconf
 """
 from django.contrib import admin
 from django.urls import path, include
-from game_backend.views import main_page, design_game, admin_comments_review, admin_user_review, all_users, all_games
+from game_backend.views import main_page, design_game, admin_comments_review, admin_user_review, all_users, all_games, add_friend, user_review
 from game_backend.views import get_profile
 from django.conf import settings
 from django.conf.urls.static import static
@@ -23,13 +23,15 @@ from django.conf.urls.static import static
 urlpatterns = [
                   path('admin/', admin.site.urls),
                   path('', main_page),
-                  path('design-game/', design_game),
+                  path('design-game/', design_game, name='design'),
                   path('admin-comment-review/', admin_comments_review),
                   path('admin-user-review/', admin_user_review),
                   path('all-users/', all_users),
-                  path('all-games/', all_games),
+                  path('all-games/', all_games, name='all-games'),
                   path('profile/', get_profile),
                   path('profile/<int:id>/', get_profile),
+                  path('add_friend/', add_friend, name='add-friend'),
+                  path('user_review/', user_review, name='user-review'),
                   path('accounts/', include('django.contrib.auth.urls')),
               ] + static(settings.STATIC_URL, document_root=settings.STATIC_ROOT) + \
               static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)
diff --git a/game_backend/admin.py b/game_backend/admin.py
index 160b316..e22a1db 100644
--- a/game_backend/admin.py
+++ b/game_backend/admin.py
@@ -1,5 +1,5 @@
 from django.contrib import admin
-from game_backend.models import Profile, GameLog, GameReview , UserReview
+from game_backend.models import Profile, GameLog, GameReview , UserReview, Friend
 from game_backend.models import Game
 
 class ProfileAdmin(admin.ModelAdmin):
@@ -20,4 +20,8 @@ admin.site.register(UserReview, UserReviewAdmin)
 
 class GameAdmin(admin.ModelAdmin):
     pass
-admin.site.register(Game, GameAdmin)
\ No newline at end of file
+
+class FriendAdmin(admin.ModelAdmin):
+    pass
+
+admin.site.register(Friend, FriendAdmin)
\ No newline at end of file
diff --git a/game_backend/migrations/0013_auto_20190120_1738.py b/game_backend/migrations/0013_auto_20190120_1738.py
new file mode 100644
index 0000000..5364783
--- /dev/null
+++ b/game_backend/migrations/0013_auto_20190120_1738.py
@@ -0,0 +1,28 @@
+# Generated by Django 2.1.5 on 2019-01-20 17:38
+
+from django.db import migrations, models
+import django.db.models.deletion
+
+
+class Migration(migrations.Migration):
+
+    dependencies = [
+        ('game_backend', '0012_auto_20190120_1503'),
+    ]
+
+    operations = [
+        migrations.CreateModel(
+            name='Friend',
+            fields=[
+                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('is_accepted', models.BooleanField(default=False)),
+                ('friend_player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friend_player', to='game_backend.Profile')),
+                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game_backend.Profile')),
+            ],
+        ),
+        migrations.AlterField(
+            model_name='game',
+            name='date_added',
+            field=models.DateField(auto_now_add=True),
+        ),
+    ]
diff --git a/game_backend/migrations/0014_auto_20190120_1823.py b/game_backend/migrations/0014_auto_20190120_1823.py
new file mode 100644
index 0000000..08bd2ac
--- /dev/null
+++ b/game_backend/migrations/0014_auto_20190120_1823.py
@@ -0,0 +1,18 @@
+# Generated by Django 2.1.5 on 2019-01-20 18:23
+
+from django.db import migrations, models
+
+
+class Migration(migrations.Migration):
+
+    dependencies = [
+        ('game_backend', '0013_auto_20190120_1738'),
+    ]
+
+    operations = [
+        migrations.AlterField(
+            model_name='userreview',
+            name='date_added',
+            field=models.DateField(auto_now_add=True),
+        ),
+    ]
diff --git a/game_backend/migrations/0015_auto_20190120_1824.py b/game_backend/migrations/0015_auto_20190120_1824.py
new file mode 100644
index 0000000..f1d61e9
--- /dev/null
+++ b/game_backend/migrations/0015_auto_20190120_1824.py
@@ -0,0 +1,24 @@
+# Generated by Django 2.1.5 on 2019-01-20 18:24
+
+from django.db import migrations, models
+import django.db.models.deletion
+
+
+class Migration(migrations.Migration):
+
+    dependencies = [
+        ('game_backend', '0014_auto_20190120_1823'),
+    ]
+
+    operations = [
+        migrations.AlterField(
+            model_name='userreview',
+            name='publisher',
+            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='publisher', to='game_backend.Profile'),
+        ),
+        migrations.AlterField(
+            model_name='userreview',
+            name='target',
+            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='target', to='game_backend.Profile'),
+        ),
+    ]
diff --git a/game_backend/models.py b/game_backend/models.py
index 6d364c6..daf959b 100644
--- a/game_backend/models.py
+++ b/game_backend/models.py
@@ -28,12 +28,12 @@ class GameReview(models.Model):
     date_added = models.DateField()
 
 class UserReview(models.Model):
-    target = models.OneToOneField(Profile, on_delete=models.CASCADE, related_name='target')
-    publisher = models.OneToOneField(Profile, on_delete=models.CASCADE, related_name='publisher')
+    target = models.ForeignKey(Profile, on_delete=models.CASCADE, related_name='target')
+    publisher = models.ForeignKey(Profile, on_delete=models.CASCADE, related_name='publisher')
     score = models.IntegerField(blank=False, null=False)
     comment = models.CharField(max_length=500, blank=True)
     publish = models.BooleanField(default=False)
-    date_added = models.DateField()
+    date_added = models.DateField(auto_now_add=True)
 
 class Game(models.Model):
     max_score = models.IntegerField(default=100)
@@ -42,4 +42,9 @@ class Game(models.Model):
     player = models.ForeignKey(Profile, on_delete=models.CASCADE)
     online_player = models.IntegerField(default=0)
     game_score = models.IntegerField(default=0)
-    date_added = models.DateField()
\ No newline at end of file
+    date_added = models.DateField(auto_now_add=True)
+
+class Friend(models.Model):
+    player = models.ForeignKey(Profile, on_delete=models.CASCADE)
+    friend_player = models.ForeignKey(Profile, related_name='friend_player', on_delete=models.CASCADE)
+    is_accepted = models.BooleanField(default=False)
diff --git a/game_backend/views.py b/game_backend/views.py
index df4eb6e..caa704d 100644
--- a/game_backend/views.py
+++ b/game_backend/views.py
@@ -1,7 +1,9 @@
-from django.http import HttpResponse
+from django.http import HttpResponse, HttpResponseRedirect
 from django.template import loader
-from game_backend.models import Profile, GameReview, UserReview, Game
+from django.urls import reverse
+from game_backend.models import Profile, GameReview, UserReview, Game, Friend
 from django.contrib.auth.models import User
+import json
 
 def main_page(request):
     is_login = request.user.is_authenticated
@@ -35,6 +37,15 @@ def main_page(request):
 def design_game(request):
     template = loader.get_template('game_design.html')
     context = {}
+    if request.method == 'POST':
+        new_game = Game()
+        new_game.max_score = request.POST.get('max_score')
+        new_game.shut_out_dice = request.POST.get('shut_out_dice')
+        new_game.dice_number = request.POST.get('dice_number')
+        new_game.player = request.user.profile
+        new_game.save()
+        return HttpResponseRedirect(reverse('all-games'))
+
     return HttpResponse(template.render(context, request))
 
 def admin_comments_review(request):
@@ -78,3 +89,21 @@ def get_profile(request, id=None):
         profile = Profile.objects.get(user=user)
     context = {'profile' : profile}
     return HttpResponse(template.render(context, request))
+
+
+def add_friend(request):
+    friendship = Friend()
+    friendship.player = request.user.profile
+    friendship.friend_player = Profile.objects.get(id=request.POST.get('friend_player_id'))
+    friendship.save()
+    return HttpResponse("OK")
+
+
+def user_review(request):
+    user_review = UserReview()
+    user_review.score = request.POST.get('score')
+    user_review.comment = request.POST.get('comment')
+    user_review.target = Profile.objects.get(id=request.POST.get('target_player_id'))
+    user_review.publisher = request.user.profile
+    user_review.save()
+    return HttpResponse("OK")
diff --git a/templates/game_design.html b/templates/game_design.html
index f1510af..c8627c1 100644
--- a/templates/game_design.html
+++ b/templates/game_design.html
@@ -19,44 +19,47 @@
 {% endblock %}
 
 {% block page_content %}
-    <div class="row">
-        <div class="col-md-8 mx-auto text-center border p-2">
-            <p class="h4 float-left">Lets design the game:</p>
-            <div class="clearfix"></div>
-            <p class="w-auto float-left p-1 text-white rounded bg-primary">1. Maximum of scores</p>
-            <div class="col-10 m-2">
-                <input class="form-control" type="number" value="100" id="number-of-score">
-            </div>
-            <p class="w-auto float-left p-1 text-white rounded bg-primary">2.Shut out dice</p>
-            <div class="col-10 m-2">
-                <select class="form-control" id="shut-out-dice">
-                    <option>1</option>
-                    <option>2</option>
-                    <option>3</option>
-                    <option>4</option>
-                    <option>5</option>
-                    <option>6</option>
-                </select>
-            </div>
+    <form action="{% url 'design' %}" method="post">
+    {% csrf_token %}
+        <div class="row">
+            <div class="col-md-8 mx-auto text-center border p-2">
+                <p class="h4 float-left">Lets design the game:</p>
+                <div class="clearfix"></div>
+                <p class="w-auto float-left p-1 text-white rounded bg-primary">1. Maximum of scores</p>
+                <div class="col-10 m-2">
+                    <input class="form-control" type="number" value="100" id="number-of-score" name="max_score">
+                </div>
+                <p class="w-auto float-left p-1 text-white rounded bg-primary">2.Shut out dice</p>
+                <div class="col-10 m-2">
+                    <select class="form-control" id="shut-out-dice" name="shut_out_dice">
+                        <option>1</option>
+                        <option>2</option>
+                        <option>3</option>
+                        <option>4</option>
+                        <option>5</option>
+                        <option>6</option>
+                    </select>
+                </div>
 
-            <p class="w-auto float-left p-1 text-white rounded bg-primary">3.Dice number</p>
-            <div class="clearfix"></div>
-            <div class="col-10 m-2">
-                <div class="row block">
+                <p class="w-auto float-left p-1 text-white rounded bg-primary">3.Dice number</p>
+                <div class="clearfix"></div>
+                <div class="col-10 m-2">
+                    <div class="row block">
 
-                    <div class="col-2">
-                        <label><input class="m-1" type="radio" name="optradio" checked>1</label>
-                    </div>
-                    <div class="col-2">
-                        <label><input class="m-1" type="radio" name="optradio">2</label>
-                    </div>
-                    <div class="col-2">
-                        <label><input class="m-1" type="radio" name="optradio">4</label>
-                    </div>
+                        <div class="col-2">
+                            <label><input class="m-1" type="radio" name="dice_number" value="1" checked>1</label>
+                        </div>
+                        <div class="col-2">
+                            <label><input class="m-1" type="radio" name="dice_number" value="2">2</label>
+                        </div>
+                        <div class="col-2">
+                            <label><input class="m-1" type="radio" name="dice_number" value="4">4</label>
+                        </div>
 
+                    </div>
                 </div>
+                <input type="submit" class="btn btn-success float-left m-2" value="Save"/>
             </div>
-            <button type="button" class="btn btn-success float-left m-2">Save</button>
         </div>
-    </div>
+    </form>
 {% endblock %}
\ No newline at end of file
diff --git a/templates/profile.html b/templates/profile.html
index 8816da9..ecbec28 100644
--- a/templates/profile.html
+++ b/templates/profile.html
@@ -27,8 +27,8 @@
                     <img class="img-fluid rounded-circle w-75 m-2 mx-auto" src={{ profile.avatar.url }}>
                     <div class="clearfix"></div>
                     <a href="#" class="btn btn-success mx-auto m-2">Play</a>
-                    <a href="#" class="btn btn-primary mx-auto m-2">Report</a>
-                    <a href="#" class="btn btn-primary mx-auto m-2">Add friend</a>
+                    <button id="user_review" href="#" class="btn btn-primary mx-auto m-2">Review</button>
+                    <button id="add_friend" href="#" class="btn btn-primary mx-auto m-2">Add friend</button>
                 </div>
                 <div class="col-md-7 mx-auto text-center border p-2">
                     <p class="m-3 h2 text-left">{{ profile.user.username }} </p>
@@ -55,4 +55,54 @@
             </div>
         </div>
     </div>
+      <script>
+function getCookie(name) {
+    var cookieValue = null;
+    if (document.cookie && document.cookie !== '') {
+        var cookies = document.cookie.split(';');
+        for (var i = 0; i < cookies.length; i++) {
+            var cookie = jQuery.trim(cookies[i]);
+            // Does this cookie string begin with the name we want?
+            if (cookie.substring(0, name.length + 1) === (name + '=')) {
+                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
+                break;
+            }
+        }
+    }
+    return cookieValue;
+}
+var csrftoken = getCookie('csrftoken');
+    $("#add_friend").click(function () {
+      $.ajax({
+        url: "{% url 'add-friend' %}",
+        data: {
+          'friend_player_id': {{ profile.id }},
+            'csrfmiddlewaretoken': csrftoken
+        },
+          type: "POST",
+          dataType:'json',
+          success: function (data) {
+        }
+      });
+
+    });
+
+    $("#user_review").click(function () {
+      $.ajax({
+        url: "{% url 'user-review' %}",
+        data: {
+          'target_player_id': {{ profile.id }},
+            'score': 0,
+            'comment': 'khar',
+            'csrfmiddlewaretoken': csrftoken
+        },
+          type: "POST",
+          dataType:'json',
+          success: function (data) {
+        }
+      });
+
+    });
+
+  </script>
 {% endblock %}
\ No newline at end of file
